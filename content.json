[{"title":"本博客搭建方法","date":"2018-06-17T17:12:25.000Z","path":"2018/06/18/2018-6-18/","text":"说在前面本博客是使用Hexo + gitHub搭建的个人博客。其中致谢于以下俩位道友：csdn z皓: 使用Hexo+github一步步搭建数以自己的博客主题提供者 yscoder:一个Material Design风格的Hexo主题。首先是Hexo+gitHub的使用安装及配置问题。由于z道友教程中内容比较详细，所以这边不做赘述。再次感谢道友提供的教程。然后第二部分是主题的安装。 技术准备Node.js 6.x+使用本博客需要6.x+以上版本的Node.jsNode.jsNode相关安装教程请自行百度或者谷歌，如需帮助请邮件。 GitHub通过gitHub的page来作为博客的站点，可以使用自己的服务器或者其他服务器来搭建。 流程安装Gitgit官网totroiseGit在我个人网盘 密码：wn8s，如果链接失效请告知，相关安装请自行百度或者谷歌。如需帮助请邮件。 检测Node以及git的安装情况在命令行模式下分别执行一下命令检测安装情况：1$ hexo new \"node -v\" 1$ hexo new \"npm -v\" 1$ hexo new \"git --version\" 如果没有任何报错，并且给出对应的版本号则表示安装正确。如果出现错误，请自行百度或者谷歌。如需帮助请邮件。接着就是按照z道友的教程安装Hexo环境，以及配置gitHub项目。 Hexo首先创建Blog文件夹。然后进入该文件夹，执行命令安装hexo 模块12$ cd 'your blog path'$ npm install hexo -g 检测Hexo安装情况1$ heox -v 确认hexo安装成功，在项目文件夹中初始化Hexo项目1$ heox init 成功后如图所示： 看到后面的“Start blogging with Hexo！” 表示hexo项目初始化成功。 然后是Node项目的正常流程，初始化依赖的组件：1$ npm install 首次体验Hexo123456789101112131415161718192021222324252627282930313233$ hexo gINFO Start processingINFO Files loaded in 239 msINFO Generated: index.htmlINFO Generated: archives/index.htmlINFO Generated: fancybox/blank.gifINFO Generated: fancybox/jquery.fancybox.jsINFO Generated: fancybox/jquery.fancybox.pack.jsINFO Generated: fancybox/fancybox_overlay.pngINFO Generated: fancybox/fancybox_loading@2x.gifINFO Generated: fancybox/fancybox_sprite.pngINFO Generated: fancybox/fancybox_sprite@2x.pngINFO Generated: fancybox/fancybox_loading.gifINFO Generated: fancybox/jquery.fancybox.cssINFO Generated: css/fonts/fontawesome-webfont.woffINFO Generated: js/script.jsINFO Generated: archives/2018/06/index.htmlINFO Generated: css/style.cssINFO Generated: archives/2018/index.htmlINFO Generated: fancybox/helpers/jquery.fancybox-buttons.cssINFO Generated: fancybox/helpers/jquery.fancybox-media.jsINFO Generated: fancybox/helpers/jquery.fancybox-buttons.jsINFO Generated: css/fonts/FontAwesome.otfINFO Generated: fancybox/helpers/fancybox_buttons.pngINFO Generated: css/fonts/fontawesome-webfont.eotINFO Generated: css/fonts/fontawesome-webfont.svgINFO Generated: fancybox/helpers/jquery.fancybox-thumbs.jsINFO Generated: css/fonts/fontawesome-webfont.ttfINFO Generated: fancybox/helpers/jquery.fancybox-thumbs.cssINFO Generated: css/images/banner.jpgINFO Generated: 2018/06/18/hello-world/index.htmlINFO 28 files generated in 521 ms 开启服务器1234$ hexo sINFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 到此可以正式体验Hexo了。如果失败请检查是否端口被占用问题， 如果是端口被占用，可以通过如下命令修改hexo端口:1$ hexo server -p 端口号 如果步骤没有错的的，则最终效果如图所示： Github page首先呢，你需要一个GitHub账号。如果没有请跳过。。。。设置git账号：在博客根目录下运行命令行工具。推荐git自带的gitbase. 设置账号：1$git config --global user.name &quot;your git name&quot; 设置邮箱：1$git config --global user.email &quot;your git email&quot; 创建ssh:1$ ssh-keygen -t rsa -C \"your git email\" 连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\\Users\\Administrator.ssh）。 添加密钥到ssh-agent1$ eval \"$(ssh-agent -s)\" 添加生成的SSH key到ssh-agent:1$ ssh-add ~/.ssh/id_rsa 登录Github，点击头像下的settings，添加ssh 新建一个new ssh key，将id_rsa.pub文件里的内容复制上去 添加完github的 ssh key后，回到项目文件夹根目录的命令行工具：123$ ssh -T git@github.comHi Visow! You've successfully authenticated, but GitHub does not provide shell access. 如果出现 Hi “you git name”则表示ssh添加成功！ 假如ssh-key配置失败，那么只要以下步骤就能完全解决 首先，清除所有的key-pair：12$ ssh-add -D$ rm -r ~/.ssh 删除你在github中的public-key 重新生成ssh密钥对1$ ssh-keygen -t rsa -C \"xxx@xxx.com\" 接下来正常操作在github上添加公钥public-key:1、首先在你的终端运行 xclip -sel c ~/.ssh/id_rsa.pub将公钥内容复制到剪切板2、在github上添加公钥时，直接复制即可3、保存 测试：在终端 ssh -T git@github.com 确认了ssh配置没有问题之后，到git上创建一个项目： 选择 New repository，然后可以看到创建界面 repository name的格式为 你git的用户名.github.io; ex：Visow.github.io选中 Initialize this repository with a readme;create repository!创建成功后复制项目的ssh 配置Deployment:在hexo根目录下，打开 _config.yml配置文件，修改repository(在文件尾部)：1234deploy: type: git repository: git@github.com:Visow/Visow.github.io.git // 这里是你刚才复制的ssh branch: master 修改完成后需要安装一个git的拓展组建：1$ npm install hexo-deployer-git --save 创建一篇新的博客：1$ hexo new post \"你好,Hexo\" 这时候在文件夹_posts目录下将会看到已经创建的文件 OK, 这时候可以生成部署了；1$ hexo d -g 该操作会生成对应的博客和提交代码到刚才创建的git项目中；这时候访问https://“your git name”.github.io ，将会看到生成文章了： 好了，到此为止，最基本的也是最全面的hexo+github搭建博客完结。接下来是indigo主题修改： 以上内容表示前面流程没有任何问题，进入主题修改环节indigo主题","tags":[]}]